{"version":3,"sources":["Components/Phonebook.module.css","Redux/actions.js","Redux/operations.js","Redux/selectors.js","Components/Phonebook.js","Components/Contacts.js","Components/Filter.js","App.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","PhoneBook","number","nameInputId","shortid","generate","numberInputId","handleChange","event","setState","currentTarget","value","handleForm","preventDefault","props","find","contact","alert","onSubmit","id","this","className","styles","label","htmlFor","type","onChange","button","Component","connect","dispatch","actions","post","then","data","catch","error","ContactItem","onRemove","onClick","delete","operations","map","target","placeholder","fetchContact","get","createReducer","_","payload","action","loading","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc0addeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__1P0Z0\",\"label\":\"Phonebook_label__28DPI\",\"button\":\"Phonebook_button__2Rpvf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n    'contacts/deleteContactRequest'\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n    'contacts/deleteContactSuccess'\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contact/filter');\r\n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContact = () => (dispatch) => {\r\n    dispatch(actions.fetchContactRequest());\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n        .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n    dispatch(actions.addContactRequest());\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n    dispatch(actions.deleteContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n        .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\n// export const fetchContact = () => async (dispatch) => {\r\n//     dispatch(actions.fetchContactRequest());\r\n\r\n//     try {\r\n//         const contacts = await contactsAPI.fetchContact();\r\n//         dispatch(actions.fetchContactSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(actions.fetchContactError(error));\r\n//     }\r\n// };\r\n\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//     dispatch(actions.addContactRequest());\r\n\r\n//     try {\r\n//         const contacts = await contactsAPI.addContact(contact);\r\n//         dispatch(actions.addContactSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(actions.addContactError(error));\r\n//     }\r\n// };\r\n\r\n// export const deleteContact = (contactId) => async (dispatch) => {\r\n//     dispatch(actions.deleteContactRequest());\r\n\r\n//     try {\r\n//         const contacts = await contactsAPI.deleteContact(contactId);\r\n//         dispatch(actions.deleteContactSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(actions.deleteContactError(error));\r\n//     }\r\n// };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = (state) => state.contacts.contacts;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getError = (state) => state.contacts.error;\r\nexport const getFilteredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter)\r\n        );\r\n    }\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport styles from './Phonebook.module.css';\r\nimport * as operations from '../Redux/operations';\r\nimport { getContacts } from '../Redux/selectors';\r\n\r\nclass PhoneBook extends Component {\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.currentTarget.name]: event.currentTarget.value,\r\n        });\r\n    };\r\n\r\n    handleForm = (event) => {\r\n        event.preventDefault();\r\n        const { name } = this.state;\r\n        const { contacts } = this.props;\r\n        if (contacts.find((contact) => contact.name === name)) {\r\n            return alert(`${name} is already in contacts.`);\r\n        }\r\n        this.props.onSubmit({ id: shortid.generate(), ...this.state });\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleForm} className=\"form\">\r\n                <label className={styles.label} htmlFor={this.nameInputId}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                    ></input>\r\n                </label>\r\n                <label className={styles.label} htmlFor={this.numberInputId}>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    ></input>\r\n                </label>\r\n                <button type=\"submit\" className={styles.button}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: getContacts(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onSubmit: ({ name, number }) =>\r\n        dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as operations from '../Redux/operations';\r\nimport { getFilteredContacts } from '../Redux/selectors';\r\n\r\nconst ContactItem = ({ id, name, number, onRemove }) => {\r\n    return (\r\n        <li id={id}>\r\n            <span>{name}</span>: <span>{number}</span>\r\n            <button type=\"button\" id={id} onClick={() => onRemove(id)}>\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst Contacts = ({ contacts, onRemove }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onRemove={onRemove}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: getFilteredContacts(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onRemove: (id) => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport * as actions from '../Redux/actions';\r\nimport { getFilter } from '../Redux/selectors';\r\n\r\nconst nameInputId = shortid.generate();\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <div>\r\n            <h3>Find contacts by name</h3>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search contact\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={onChange}\r\n                id={nameInputId}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: getFilter(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onChange: (event) => dispatch(actions.filterContact(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport PhoneBook from './Components/Phonebook';\nimport Contacts from './Components/Contacts';\nimport Filter from './Components/Filter';\nimport { connect } from 'react-redux';\nimport { fetchContact } from './Redux/operations';\n\nfunction App() {\n    return (\n        <>\n            <h1>Phonebook</h1>\n            <PhoneBook />\n            <h2>Contacts</h2>\n            <Filter />\n            <Contacts />\n        </>\n    );\n}\n\n// const mapStateToProps = ({ contacts: { items } }) => ({\n//     contacts: items,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchContact: () => dispatch(fetchContact()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\n// const initialState = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.fetchContactSuccess]: (_, { payload }) => payload,\r\n    [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [actions.deleteContactSuccess]: (state, action) => [\r\n        state.filter((contact) => contact.id !== action.payload),\r\n    ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [actions.fetchContactRequest]: () => true,\r\n    [actions.fetchContactSuccess]: () => false,\r\n    [actions.fetchContactError]: () => false,\r\n    [actions.addContactRequest]: () => true,\r\n    [actions.addContactSuccess]: () => false,\r\n    [actions.addContactError]: () => false,\r\n    [actions.deleteContactRequest]: () => true,\r\n    [actions.deleteContactSuccess]: () => false,\r\n    [actions.deleteContactError]: () => false,\r\n});\r\n\r\n// const error = createReducer(null, {\r\n//     [actions.fetchContactError]: (state, action) => [...state, action.payload],\r\n//     [actions.addContactError]: (state, action) => [...state, action.payload],\r\n//     [actions.deleteContactError]: (_, action) => [action.payload],\r\n// });\r\n\r\nconst error = createReducer(null, {\r\n    [actions.fetchContactError]: (error) => error,\r\n    [actions.addContactError]: (error) => error,\r\n    [actions.deleteContactError]: (error) => error,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport reducer from './reducer'\r\n\r\nconst store = configureStore({\r\n    reducer: { contacts: reducer },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}